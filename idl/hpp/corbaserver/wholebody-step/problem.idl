// Copyright (C) 2011,2012 CNRS-LAAS
// Author: Sebastien Dalibard.
//
// This file is part of the hpp-wholebody-step-corba.
//
// hpp-wholebody-step-corba is free software: you can redistribute
// it and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation, either
// version 3 of the License, or (at your option) any later version.
//
// hpp-wholebody-step-corba is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with hpp-wholebody-step-corba.  If not, see
// <http://www.gnu.org/licenses/>.

#ifndef HPP_WHOLEBODY_STEP_CORBA_IDL
# define HPP_WHOLEBODY_STEP_CORBA_IDL

# include <hpp/corbaserver/common.idl>

module hpp {
  module corbaserver {
  module wholebody_step {
  interface Problem {

    /// Type of static stability constraints.
    enum StaticStabilityType {
        /// Corresponds to a robot sliding on the floor, the relative position
        /// ot the feet being constant. It contains five following constraints:
        /// \li prefix + "/relative-com": relative position of the center of
        ///                               mass in the left ankle frame,
        /// \li prefix + "/relative-orientation": relative orientation of the
        ///                                       feet,
        /// \li prefix + "/relative-position": relative position of the feet,
        /// \li prefix + "/orientation-left-foot": orientation of the left foot,
        /// \li prefix + "/position-left-foot": position of the left foot.
        SLIDING,
        /// Corresponds to a robot sliding on two feets, the COM between the
        /// the feet. The feet are constrained to stay on the floor, parallel to
        /// it. It contains five following constraints:
        /// \li prefix + "/com-between-feet": The COM projection along z lies
        ///                                   between the two ankles
        /// \li prefix + "/orientation-right": right foot remains horizontal,
        /// \li prefix + "/position-right": height of the right foot,
        /// \li prefix + "/orientation-left": left foot remains horizontal,
        /// \li prefix + "/position-left": height of the left foot.
        SLIDING_ALIGNED_COM,
	/// Same as SLIDING except that the feet are fixed on the ground
	FIXED_ON_THE_GROUND,
	/// Same as SLIDING_ALIGNED_COM, except that the feet are fixed on the
	/// ground
	FIXED_ALIGNED_COM
    };

    /// Create static stability constraints and store into ProblemSolver
    /// \param prefix prefix of the names of the constraint as stored in
    ///        core::ProblemSolver,
    /// \param floatArray input configuration for computing constraint reference,
    /// \param leftAnkle, rightAnkle: names of the ankle joints.
    /// \param comName name of the PartialCOM in the problem solver map. Put "" for
    ///        a full COM computations.
    /// \param type type of static stability constraints you wish to create.
    ///
    /// The constraints are stored in the core::ProblemSolver constraints map
    /// and are accessible through the method
    /// core::ProblemSolver::addNumericalConstraint:
    void addStaticStabilityConstraints (in string prefix,
                                        in floatSeq floatArray,
                                        in string leftAnkle,
                                        in string rightAnkle,
                                        in string comName,
                                        in StaticStabilityType type)
      raises (Error);
  }; //interface Problem
  }; // module wholebody_step
  }; // module corbaserver
}; // module hpp

#endif // HPP_WHOLEBODY_STEP_CORBA_IDL
